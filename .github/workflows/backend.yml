name: CI

permissions:
  packages: read
  contents: read

on:
  workflow_call:

jobs:
  backend-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
    - uses: actions/checkout@v4
    - run: pipx install poetry==1.7.1
    - uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'poetry'
        cache-dependency-path: backend/poetry.lock
    - run: |
        poetry env use python3.11
        poetry install --sync
    - uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: authpage/package-lock.json
    - name: Cache authpage
      id: cached-authpage
      uses: actions/cache@v3
      with:
        key: authpage-${{ hashFiles('authpage') }}
        path: backend/src/apiserver/resources/static/credentials
    - name: Build credentials
      if: ${{ steps.cached-authpage.outputs.cache-hit != 'true' }}
      run: |
        npm install
        npm run build
      working-directory: ${{ github.workspace }}/authpage
    - name: Pytest
      run: poetry run pytest
      env:
        QUERY_TEST: true
    - name: Black
      run: poetry run black src tests
    - name: Ruff
      run: poetry run ruff src tests
    - name: Cache mypy results
      uses: actions/cache@v3
      with:
        key: mypy-${{ hashFiles('backend/poetry.lock') }}
        path: backend/.mypy_cache
    - name: Mypy
      run: poetry run mypy
    services:
      postgres:
        image: ghcr.io/dsav-dodeka/postgres:localdev
        credentials:
          username: ${{ github.actor }}
          password: ${{ github.token }}
        # These values must align with the config used by the tests in the repo
        # The port is set in the image
        env:
          POSTGRES_PASSWORD: postpost
          POSTGRES_USER: dodeka
        options: >-
          --health-cmd "pg_isready -p 3141"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3141:3141
      redis:
        image: ghcr.io/dsav-dodeka/redis:localdev
        credentials:
          username: ${{ github.actor }}
          password: ${{ github.token }}
        # These values must align with the config used by the tests in the repo
        # The port is set in the image
        env:
          REDIS_PASSWORD: redisredis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
