name: CI

on:
  push:
    branches: [ main ]
  pull_request:
  release:
    types: [ published ]

permissions:
  packages: write
  contents: write

jobs:
  backend-ci:
    uses: DSAV-Dodeka/dodeka/.github/workflows/backend.yml@uv-312
  
  config-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: deploy
    steps:
      - uses: actions/checkout@v4
      - name: uv
        id: setup-uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "0.5.5"
          enable-cache: true
          cache-dependency-glob: "./deploy/uv.lock"
      - name: uv sync
        run: uv sync --frozen
      # Build config using tiptenbrink/confspawn
      - uses: taiki-e/install-action@v2
        with:
          tool: nu
      - name: Config
        run: nu build.nu deploy
        working-directory: ${{ github.workspace }}
      - uses: stefanzweifel/git-auto-commit-action@v5
        id: auto-commit-action
        if: github.event_name != 'pull_request'
        with:
          commit_message: Config build (automated)
          file_pattern: deploy/use/
      - name: "Run if changes have been detected"
        if: steps.auto-commit-action.outputs.changes_detected == 'true'
        run: exit 1

  build-db:
    needs: [backend-ci, config-deploy]
    strategy:
      matrix:
        target: ['localdev' ]
    uses: DSAV-Dodeka/dodeka/.github/workflows/db.yml@uv-312
    with:
      env: ${{ matrix.target }}

  build-server:
    needs: [backend-ci, config-deploy]
    strategy:
      matrix:
        target: ['localdev' ]
    uses: DSAV-Dodeka/dodeka/.github/workflows/server.yml@uv-312
    with:
      env: ${{ matrix.target }}

  build-kv:
    needs: [backend-ci, config-deploy]
    strategy:
      matrix:
        target: ['localdev' ]
    uses: DSAV-Dodeka/dodeka/.github/workflows/kv.yml@uv-312
    with:
      env: ${{ matrix.target }}
