name: CI

on:
  push:
    branches: [ main ]
  pull_request:
  release:
    types: [ published ]

permissions:
  packages: write
  contents: write

jobs:
  backend-ci:
    uses: DSAV-Dodeka/dodeka/.github/workflows/backend.yml@main
  
  config-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: deploy
    steps:
      - uses: actions/checkout@v4
      - run: pipx install poetry==1.7.1
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'poetry'
          cache-dependency-path: deploy/poetry.lock
      - run: poetry install
      # Build config using tiptenbrink/confspawn
      - uses: taiki-e/install-action@v2
        with:
          tool: nu
      - name: Config
        run: |
          poetry run confrecipe -r build/deploy/dev/dev.toml -e localdev
          poetry run confrecipe -r build/deploy/staging/staging.toml -e staging
          poetry run confrecipe -r build/deploy/production/production.toml -e production
          poetry run confrecipe -r build/data_sync/data_sync.toml -e production
          poetry run confrecipe -r build/deploy/repl/repl.toml -e production
      - uses: stefanzweifel/git-auto-commit-action@v5
        id: auto-commit-action
        if: github.event_name != 'pull_request'
        with:
          commit_message: Config build (automated)
          file_pattern: deploy/use/
      - name: "Run if changes have been detected"
        if: steps.auto-commit-action.outputs.changes_detected == 'true'
        run: exit 1

  build-db:
    needs: [backend-ci, config-deploy]
    strategy:
      matrix:
        target: ['localdev', 'staging', 'production' ]
    uses: DSAV-Dodeka/dodeka/.github/workflows/db.yml@main
    with:
      env: ${{ matrix.target }}

  build-server:
    needs: [backend-ci, config-deploy]
    strategy:
      matrix:
        target: ['localdev', 'staging', 'production' ]
    uses: DSAV-Dodeka/dodeka/.github/workflows/server.yml@main
    with:
      env: ${{ matrix.target }}

  build-kv:
    needs: [backend-ci, config-deploy]
    strategy:
      matrix:
        target: ['localdev', 'staging', 'production' ]
    uses: DSAV-Dodeka/dodeka/.github/workflows/kv.yml@main
    with:
      env: ${{ matrix.target }}
