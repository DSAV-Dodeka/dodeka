name: Deploy DB

on:
  push:
    branches: [ ci ]

jobs:
 config-deploy:
   runs-on: ubuntu-latest

   steps:
   - uses: actions/checkout@v2
   # Third party GH Action, pinned to commit for security
   - name: Set up Python
     uses: actions/setup-python@v2
     with:
       python-version: '3.9'
       # Cache means install is saved in repo cache
       # Increment poetry-0 if new install is necessary
   - name: Load cached Poetry installation
     uses: actions/cache@v2
     with:
       path: ~/.local
       key: poetry-0
   - name: Install Poetry
     uses: snok/install-poetry@v1
     with:
       virtualenvs-create: true
       # .venv is created in project
       virtualenvs-in-project: true
       installer-parallel: true
   # Load .venv directly from cache
   - name: Load cached venv
     id: cached-poetry-dependencies
     uses: actions/cache@v2
     with:
       path: .venv
       # Key only changes if poetry.lock changes
       key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
   - name: Install dependencies
     if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
     run: poetry install --no-interaction --no-root
   - name: Install library
     run: poetry install --no-interaction
   # Build config using tiptenbrink/confspawn
   - name: Config
     run: |
       poetry run python -c "from spawn_db import spawn_deploy; spawn_deploy()"
       poetry run python -c "from spawn_db import spawn_build; spawn_build('configged')"
     working-directory: ${{ github.workspace }}/build
