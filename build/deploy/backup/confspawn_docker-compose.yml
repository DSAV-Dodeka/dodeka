services:
  # Service name, container name will be <project name>-<service name>-1 by default
  {{ backup.service_name }}:
    # Docker image that it will set up
    image: "${BACKUP_APP_IMAGE}:${BACKUP_VERSION}"
    # A volume is basically a file system shared between the host and the container
    volumes:
      # <volume name in volumes below>:<container destination directory>
      # This means the volume will be accessible from the container in the dest. directory in the container
      - {{ backup.volume_name }}:${BACKUP_RESOURCES_TARGET}
      - {{ backup.recover_volume }}:${BACKUP_RECOVER_TARGET}
    # Environment file to load into the container
    env_file:
      - deploy.env
    # Some environment variables depend on deployment variables, so we load those in manually
    environment:
      - PGPASSWORD=${BARMAN_PASSWORD}
    # This maps ports, so the container port will be available at localhost:<HOST_PORT>
    # Shared memory size, defaults to 64m which can cause problems (apparently)
    shm_size: 256m
volumes:
  # This name should correspond to the volume mentioned in volumes above
  {{ backup.volume_name }}:
    # A local directory
    driver: local
    name: {{ backup.volume_name }}-{{ confspawn_env.name }}
  {{ backup.recover_volume }}:
    # A local directory
    driver: local
    name: {{ backup.recover_volume }}-{{ confspawn_env.name }}
networks:
  # Set up a network so that other containers on this network can access each other
  # A different container on this network can access this container by using the container name as the hostname
  # So localhost:3000 is exposed to other containers as <container name>:3000
  default:
    name: ${NETWORK_NAME}